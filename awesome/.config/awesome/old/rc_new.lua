--------------------------------------------------
-- Milkiis rc.lua                                --
-- https://github.com/mxmilkiib/dotfiles        --
--------------------------------------------------

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
--  #####  ####### ######  #######    #    
-- #     # #     # #     # #         ##    
-- #       #     # #     # #        # #    
-- #       #     # ######  #####      #    
-- #       #     # #   #   #          #    
-- #     # #     # #    #  #          #    
--  #####  ####### #     # #######  ##### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- CORE SETUP - Essential initialization and debugging
-- Run in Xephyr for testing:
-- Xephyr :1 -ac -br -noreset -screen 1152x720 & DISPLAY=:1.0 awesome -c ~/.config/awesome/rc.lua

-- ################################################################################
-- ################################################################################
-- ################################################################################
--  #          ###   ######   ##### 
--  #           #    #     # #     #
--  #           #    #     # #      
--  #           #    ######   ##### 
--  #           #    #     #       #
--  #           #    #     # #     #
--  ########## ###   ######   ##### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- LIBRARIES - Core library imports
-- If LuaRocks is installed, make sure that packages installed through it are found
pcall(require, "luarocks.loader")

-- Standard awesome libraries
local gears = require("gears")
local gmath = require("gears.math")
local awful = require("awful")
require("awful.autofocus")
local wibox = require("wibox")     -- Widget and layout library
local beautiful = require("beautiful") -- Theme handling library
local naughty = require("naughty")   -- Notification library
local menubar = require("menubar")
local hotkeys_popup = require("awful.hotkeys_popup")

-- Enable hotkeys help widget for VIM and other apps
-- when client with a matching name is opened:
-- require("awful.hotkeys_popup.keys")

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- #     #    #    ######   ##### 
-- #     #   # #   #     # #     #
-- #     #  #   #  #     # #      
-- #     # #     # ######   ##### 
--  #   #  ####### #   #         #
--   # #   #     # #    #  #     #
--    #    #     # #     #  ##### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- VARIABLES - Global variable storage
-- Store the previous tag when switching to pavucontrol
local previous_tag = nil

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ####### ######  ######   ####### ######   ##### 
-- #       #     # #     # #     # #     # #     #
-- #       #     # #     # #     # #     # #      
-- #####   ######  ######  #     # ######   ##### 
-- #       #   #   #   #   #     # #   #          #
-- #       #    #  #    #  #     # #    #  #     #
-- ####### #     # #     #  ####### #     #  ##### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ERROR HANDLING - Startup and runtime error management
-- Check if awesome encountered an error during startup and fell back to another config
-- (This code will only ever execute for the fallback config)
if awesome.startup_errors then
	naughty.notify({
		preset = naughty.config.presets.critical,
		title = "Oops, there were errors during startup!",
		text = awesome.startup_errors
	})
end

-- Handle runtime errors after startup
do
	local in_error = false
	awesome.connect_signal("debug::error", function(err)
		-- Make sure we don't go into an endless error loop
		if in_error then return end
		in_error = true

		naughty.notify({
			preset = naughty.config.presets.critical,
			title = "Oops, an error happened!",
			text = tostring(err)
		})
		in_error = false
	end)
end

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ######  #     #    #     #####  #######  ##  
-- #     # #     #   # #   #     # #       #  # 
-- #     # #     #  #   #  #       #          # 
-- ######  ####### #     #  #####  #####      # 
-- #       #     # #######       # #          # 
-- #       #     # #     # #     # #          # 
-- #       #     # #     #  #####  ####### ##### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- FOUNDATION CONFIGURATION - Basic definitions and settings

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ######  ####### #######  ##### 
-- #     # #       #       #     #
-- #     # #       #       #      
-- #     # #####   #####    ##### 
-- #     # #       #             #
-- #     # #       #       #     #
-- ######  ####### #        ##### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- DEFINITIONS - Theme and visual configuration
beautiful.init(gears.filesystem.get_configuration_dir() .. "milktheme/theme.lua")

-- Theme customization
beautiful.wallpaper = awful.util.get_configuration_dir() .. "milktheme/background.png"

-- Font settings
beautiful.hotkeys_font = "Hack Nerd Font 12"
-- beautiful.hotkeys_description_font = "JetBrains Mono 12"
-- beautiful.menu_font = "JetBrains Mono 14"
-- beautiful.menu_font = "Hack 14"  -- Now set in theme file
beautiful.menu_height = 24
beautiful.menu_width = 300

-- Color settings
beautiful.bg_systray = "#000000"
-- beautiful.bg_systray = "#191919"
beautiful.notification_bg = "#FFD700"  -- Gold background
beautiful.notification_fg = "#000000"  -- Black text
beautiful.hotkeys_modifiers_fg = "#dddddd"

-- Notification settings
naughty.config.defaults.ontop = true
-- naughty.config.defaults.timeout = 10
-- naughty.config.defaults.margin = dpi("16")
-- naughty.config.defaults.border_width = 0
naughty.config.defaults.width = 400  -- Width in pixels instead of percentage string
naughty.config.defaults.position = 'bottom_middle'

-- Notification icon settings
-- Attempt to constrain the size of large icons in their apps notifications
beautiful.notification_icon_size = 64  -- Number instead of string
naughty.config.defaults['icon_size'] = 64

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- #     # ####### #     #  ##### 
-- #     # #        #   #  #     #
-- #     # #         # #   #      
-- #     # #####      #     ##### 
-- #     # #          #          #
-- #     # #          #    #     #
-- ####### #######    #     ##### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- KEYS - Modifier key definitions
-- Default modkey (Mod4 is usually the key with a logo between Control and Alt)
-- To remap, use xmodmap or other tools
modkey = "Mod4"
altkey = "Mod1"    -- Alt key
ctrlkey = "Control" -- Control key
shiftkey = "Shift"  -- Shift key

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ####### ####### ######  #     # 
--    #    #       #     # ##   ## 
--    #    #       #     # # # # # 
--    #    #####   ######  #  #  # 
--    #    #       #   #   #     # 
--    #    #       #    #  #     # 
--    #    ####### #     # #     # 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- TERMINAL - Terminal and editor definitions
-- Define default terminal and editor
terminal = "urxvt"
-- terminal = "alacritty"
editor = os.getenv("EDITOR") or "nvim"
editor_cmd = terminal .. " -e " .. editor

-- Compound terminal command for system monitoring
terminal_cmd = terminal .. " -e btop;" ..
               terminal .. " -e journalctl -xeb;" ..
               terminal .. " -e dmesg"

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ######  #     #    #     #####  #######  ####### 
-- #     # #     #   # #   #     # #             #  
-- #     # #     #  #   #  #       #            #   
-- ######  ####### #     #  #####  #####       #    
-- #       #     # #######       # #          #     
-- #       #     # #     # #     # #         #      
-- #       #     # #     #  #####  ####### ####### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- VISUAL & UI SETUP - Wallpaper, borders, and visual effects

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- #     #    #    #       #       
-- #     #   # #   #       #       
-- #     #  #   #  #       #       
-- #     # #     # #       #       
--  #   #  ####### #       #       
--   # #   #     # #       #       
--    #    #     # ####### ####### 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- WALLPAPER - Wallpaper management and configuration
-- Define wallpaper function
local function set_wallpaper(s)
	-- Wallpaper
	if beautiful.wallpaper then
		local wallpaper = beautiful.wallpaper
		-- If wallpaper is a function, call it with the screen
		if type(wallpaper) == "function" then
			wallpaper = wallpaper(s)
		end
		gears.wallpaper.maximized(wallpaper, s, true)
	end
end

-- Set wallpaper on startup
for s = 1, screen.count() do
	gears.wallpaper.maximized(beautiful.wallpaper, s, true)
end

-- Reset wallpaper when screen geometry changes
screen.connect_signal("property::geometry", set_wallpaper)

-- ################################################################################
-- ################################################################################
-- ################################################################################
-- ######  ####### ######  ######  ####### ######  
-- #     # #     # #     # #     # #       #     # 
-- #     # #     # #     # #     # #       #     # 
-- ######  #     # ######  #     # #####   ######  
-- #     # #     # #   #   #     # #       #   #   
-- #     # #     # #    #  #     # #       #    #  
-- ######  ####### #     # ######  ####### #     # 
-- ################################################################################
-- ################################################################################
-- ################################################################################
-- BORDERS - Border properties and window shapes
-- Set border properties
beautiful.border_radius = 2
beautiful.useless_gap = 0  -- window gaps (moved from end of file)

-- Handle client window shapes
client.connect_signal("manage", function(c)
    c.shape = function(cr, w, h)
        gears.shape.rounded_rect(cr, w, h, beautiful.border_radius)
    end
end)
